syntax = "v1"

type IsOK {
	IsOK bool `json:"IsOK"`
}

// 用户相关
type (
	User {
		ID       string `json:"ID"`
		Username string `json:"Username"`
		Password string `json:"Password"`
		UpdateAt int64  `json:"UpdateAt"`
		CreateAt int64  `json:"CreateAt"`
	}

	CreateUserReq {
		Username string `json:"Username"`
		Password string `json:"Password"`
	}
	CreateUserResp {
		Code int    `json:"Code"`
		Msg  string `json:"Msg"`
		Data IsOK   `json:"Data"`
	}
	LoginReq {
		Username string `json:"Username"`
		Password string `json:"Password"`
	}

	LoginRespData {
		ID       string `json:"ID"`
		Username string `json:"Username"`
		Token    string `json:"Token"`
		ExpireAt string `json:"ExpireAt"`
	}

	LoginResp {
		Code int           `json:"Code"`
		Msg  string        `json:"Msg"`
		Data LoginRespData `json:"Data"`
	}
)

// 通用crud接口
type (
	Item {
		ID       string `json:"ID"`
		Name     string `json:"Name"`
		Age      int64  `json:"Age"`
		Secret   string `json:"-"`
		UpdateAt int64  `json:"UpdateAt"`
		CreateAt int64  `json:"CreateAt"`
	}
	CreateItemReq {
		Name   string `json:"Name"`
		Age    int64  `json:"Age"`
		Secret string `json:"Secret"`
	}
	CreateItemResp {
		Code int    `json:"Code"`
		Msg  string `json:"Msg"`
		Data IsOK   `json:"Data"`
	}
	GetItemReq {
		ID string `path:"ID"`
	}
	GetItemResp {
		Code int    `json:"Code"`
		Msg  string `json:"Msg"`
		Data Item   `json:"Data"`
	}
	ListItemReq {
		Name    string `form:"Name,optional"`
		Page    int    `form:"Page,default=1"`
		Size    int    `form:"Size,default=15"`
		OrderBy string `form:"OrderBy,default=ID,options=[ID,Name,Age,UpdateAt,CreateAt]"`
		Order   string `form:"Order,default=Desc,options=[Desc,Asc]"`
	}
	ListItemResp {
		Code  int    `json:"Code"`
		Msg   string `json:"Msg"`
		Data  []Item `json:"Data"`
		Total int    `json:"Total"`
	}
	UpdateItemReq {
		ID     string `path:"ID"`
		Name   string `json:"Name"`
		Age    int64  `json:"Age"`
		Secret string `json:"Secret"`
	}
	UpdateItemResp {
		Code int    `json:"Code"`
		Msg  string `json:"Msg"`
		Data IsOK   `json:"Data"`
	}
	DeleteItemReq {
		ID string `path:"ID"`
	}
	DeleteItemResp {
		Code int    `json:"Code"`
		Msg  string `json:"Msg"`
		Data IsOK   `json:"Data"`
	}
)

service go_zero_example-api {
	@handler CreateUser
	post /user (CreateUserReq) returns (CreateUserResp)
	@handler Login
	post /user/login (LoginReq) returns (LoginResp)
}

@server(
	jwt: Auth // 开启 jwt 认证
)
service go_zero_example-api {
	@handler CreateItem
	post /item (CreateItemReq) returns (CreateItemResp)
	@handler GetItem
	get /item/:id (GetItemReq) returns (GetItemResp)
	@handler ListItem
	get /item (ListItemReq) returns (ListItemResp)
	@handler UpdateItem
	put /item/:id (UpdateItemReq) returns (UpdateItemResp)
	@handler DeleteItem
	delete /item/:id (DeleteItemReq) returns (DeleteItemResp)
}