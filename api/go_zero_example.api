syntax = "v1"

@server(
	group: base
)
service go_zero_example-api {
	@handler Version
	get /version returns (VersionResp)
	@handler Swagger
	get /swagger
}

@server(
	prefix: /api
	group: user
)
service go_zero_example-api {
	@handler CreateUser
	post /user (CreateUserReq) returns (CreateUserResp)
	@handler Login
	post /user/login (LoginReq) returns (LoginResp)
}

@server(
	prefix: /api
	jwt: Auth // 开启 jwt 认证
	group: item
)
service go_zero_example-api {
	@handler CreateItem
	post /item (CreateItemReq) returns (CreateItemResp)
	@handler GetItem
	get /item/:id (GetItemReq) returns (GetItemResp)
	@handler ListItem
	get /item (ListItemReq) returns (ListItemResp)
	@handler UpdateItem
	put /item (UpdateItemReq) returns (UpdateItemResp)
	@handler DeleteItem
	delete /item/:id (DeleteItemReq) returns (DeleteItemResp)
}

type IsOK {
	IsOK bool `json:"IsOK"`
}

type (
	Version {
		Version string `json:"Version"`
	}

	VersionResp {
		Code int64   `json:"Code"`
		Msg  string  `json:"Msg"`
		Data Version `json:"Data"`
	}
)

// 用户相关
type (
	User {
		ID       string `json:"ID"`
		Username string `json:"Username"`
		Password string `json:"Password"`
		UpdateAt int64  `json:"UpdateAt"`
		CreateAt int64  `json:"CreateAt"`
	}

	CreateUserReq {
		Username string `json:"Username"`
		Password string `json:"Password"`
	}
	CreateUserResp {
		Code int64  `json:"Code"`
		Msg  string `json:"Msg"`
		Data IsOK   `json:"Data"`
	}
	LoginReq {
		Username string `json:"Username"`
		Password string `json:"Password"`
	}

	LoginRespData {
		ID       string `json:"ID"`
		Username string `json:"Username"`
		Token    string `json:"Token"`
		ExpireAt string `json:"ExpireAt"`
	}

	LoginResp {
		Code int64         `json:"Code"`
		Msg  string        `json:"Msg"`
		Data LoginRespData `json:"Data"`
	}
)

// 通用crud接口
type (
	Item {
		ID       string `json:"ID"`
		Name     string `json:"Name"`
		Age      int64  `json:"Age"`
		Secret   string `json:"-"`
		UpdateAt int64  `json:"UpdateAt"`
		CreateAt int64  `json:"CreateAt"`
	}
	CreateItemReq {
		Name   string `json:"Name"`
		Age    int64  `json:"Age"`
		Secret string `json:"Secret"`
	}
	CreateItemResp {
		Code int64  `json:"Code"`
		Msg  string `json:"Msg"`
		Data IsOK   `json:"Data"`
	}
	GetItemReq {
		ID string `path:"id"`
	}
	GetItemResp {
		Code int64  `json:"Code"`
		Msg  string `json:"Msg"`
		Data Item   `json:"Data"`
	}
	ListItemReq {
		Name    string `form:"Name,optional"`
		Page    int64  `form:"Page,optional,default=1"`
		Size    int64  `form:"Size,optional,default=15"`
		OrderBy string `form:"OrderBy,optional,default=ID,options=[ID,Name,Age,UpdateAt,CreateAt]"`
		Order   string `form:"Order,optional,default=Desc,options=[Desc,Asc]"`
	}
	ListItemResp {
		Code  int64   `json:"Code"`
		Msg   string  `json:"Msg"`
		Data  []*Item `json:"Data"`
		Total int64   `json:"Total"`
	}
	UpdateItemReq {
		*Item
	}
	UpdateItemResp {
		Code int64  `json:"Code"`
		Msg  string `json:"Msg"`
		Data IsOK   `json:"Data"`
	}
	DeleteItemReq {
		ID string `path:"id"`
	}
	DeleteItemResp {
		Code int64  `json:"Code"`
		Msg  string `json:"Msg"`
		Data IsOK   `json:"Data"`
	}
)